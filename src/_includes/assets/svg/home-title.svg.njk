{# Define the color for the fake 3D name element #}
{% set depth_count = 7 %}
{% set depth_min_scale = 0.95 %}
{% set depth_close_sat = 48 %}
{% set depth_close_lux = 26 %}
{% set depth_far_sat = 11 %}
{% set depth_far_lux = 8 %}
{% set depth_factor_x = 1 %}
{% set depth_factor_y = 0.95 %}

{# Define the color for the horizon #}
{% set horizon_flash = "#fff" %}

{# Define the color for the shiny parts #}
{% set shine_color = "#fff" %}

{# Define the name's wireframe #}
{% set wire_color_lum_start = 100 %}
{% set wire_color_lum_end = 50 %}
{% set wire_count = 8 %}
{% set wire_color = 'var(--home-chris-flash-glow, cyan)' %}

{% set svgTitle %}
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="500" height="281.25" viewBox="0 0 971.25 504.18" class="home-svg">
  <title>Chris, {{ 'homeTitle.creaDev' | i18n | lower }}</title>

  <defs>
    <!-- SHAPE: Chris -->
    <path id="home-svg-chris-shape" d="M170.04,287.19h93.75v46.88h-93.75c-46.88,0,-70.31,-23.44,-70.31,-70.31v-23.44c0,-46.88,23.44,-70.31,70.31,-70.31h93.75v46.88h-93.75c-15.63,0,-23.44,7.81,-23.44,23.44v23.44c0.01,15.6,7.82,23.42,23.44,23.42zm152.35,-11.72v58.59h-46.88v-164.06h46.88v58.59h82.03v-58.59h46.88v164.06h-46.88v-58.59h-82.03zm140.62,-105.47h123.05c35.16,0,52.73,17.58,52.73,52.73c0,28.59,-11.6,45.55,-34.8,50.86l34.8,60.47h-54.02l-33.87,-58.59h-41.02v58.59h-46.88v-164.06zm46.88,46.87v11.72h76.17c3.9,0,5.86,-1.95,5.86,-5.86s-1.96,-5.86,-5.86,-5.86h-76.17zm187.5,117.19h-46.88v-164.06h46.88v164.06zm111.33,0h-99.61v-46.88h99.61c3.9,0,5.86,-1.95,5.86,-5.86s-1.96,-5.86,-5.86,-5.86h-46.88c-35.16,0,-52.73,-17.58,-52.73,-52.73c0,-35.16,17.58,-52.73,52.73,-52.73h99.61v46.88h-99.61c-3.91,0,-5.86,1.95,-5.86,5.86s1.95,5.86,5.86,5.86h46.88c35.16,0,52.73,17.58,52.73,52.73s-17.58,52.73,-52.73,52.73z"></path>

    <!-- CLIP-PATH: Chris -->
    <clipPath id="home-svg-chris-clip" clipPathUnits="userSpaceOnUse">
      <use xlink:href="#home-svg-chris-shape"/>
    </clipPath>

    <!-- MASK: Chris -->
    <mask maskUnits="userSpaceOnUse" id="home-svg-chris-mask">
      <use xlink:href="#home-svg-chris-shape" fill="#fff" />
    </mask>
    <mask maskUnits="userSpaceOnUse" id="home-svg-chris-mask-inverted">
      <rect x="0" y="0" width="100%" height="100%" fill="#fff" />
      <use xlink:href="#home-svg-chris-shape" fill="#000" />
    </mask>
    <mask maskUnits="userSpaceOnUse" id="home-svg-chris-mask-outline">
      <use xlink:href="#home-svg-chris-shape" fill="none" stroke="#fff" stroke-width="2" />
    </mask>
    <mask maskUnits="userSpaceOnUse" id="home-svg-chris-mask-outline-double">
      <use xlink:href="#home-svg-chris-shape" fill="none" stroke="#fff" stroke-width="4" />
    </mask>

    <!-- FILTER: Flash Glow -->
    <filter id="flashGlow" height="300%" width="300%" x="-75%" y="-75%">
      <!-- Thicken out the original shape -->
      <feMorphology operator="dilate" radius="8" in="SourceAlpha" result="flashGlow_thicken" />

      <!-- Use a gaussian blur to create the soft blurriness of the glow -->
      <feGaussianBlur in="flashGlow_thicken" stdDeviation="16" result="flashGlow_blurred" />

      <!-- Change the color -->
      <feFlood flood-color="{{ wire_color }}" result="flashGlow_glowColor" />

      <!-- Color in the glows -->
      <feComposite in="flashGlow_glowColor" in2="flashGlow_blurred" operator="in" result="flashGlow_colored" />

      <!--Layer the effects together -->
      <feMerge>
        <feMergeNode in="flashGlow_colored"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>

    </filter>

    <!-- FILTER: Dark Purple Glow Thick -->
    <filter id="violetShadeGlow" height="300%" width="300%" x="-75%" y="-75%">
      <!-- Thicken out the original shape -->
      <feMorphology operator="dilate" radius="2" in="SourceAlpha" result="violetShadeGlow_thicken" />

      <!-- Use a gaussian blur to create the soft blurriness of the glow -->
      <feGaussianBlur in="violetShadeGlow_thicken" stdDeviation="2" result="violetShadeGlow_blurred" />

      <!-- Change the color -->
      <feFlood flood-color="var(--home-chris-inner)" result="violetShadeGlow_glowColor" />

      <!-- Color in the glows -->
      <feComposite in="violetShadeGlow_glowColor" in2="violetShadeGlow_blurred" operator="in" result="violetShadeGlow_colored" />

      <!-- Lower the final opacity -->
      <feComponentTransfer>
        <feFuncA type="linear" slope="0.5"/>
      </feComponentTransfer>

    </filter>

    <!-- FILTER: Dark Purple Glow Softer -->
    <filter id="violetShadeGlow2" height="300%" width="300%" x="-75%" y="-75%">
      <!-- Thicken out the original shape -->
      <feMorphology operator="dilate" radius="4" in="SourceAlpha" result="violetShadeGlow2_thicken" />

      <!-- Use a gaussian blur to create the soft blurriness of the glow -->
      <feGaussianBlur in="violetShadeGlow2_thicken" stdDeviation="8" result="violetShadeGlow2_blurred" />

      <!-- Change the color -->
      <feFlood flood-color="var(--home-chris-inner)" result="violetShadeGlow_glowColor" />

      <!-- Color in the glows -->
      <feComposite in="violetShadeGlow2_glowColor" in2="violetShadeGlow2_blurred" operator="in" result="violetShadeGlow2_colored" />

      <!-- Lower the final opacity -->
      <feComponentTransfer>
        <feFuncA type="linear" slope="0.25"/>
      </feComponentTransfer>

    </filter>

    <!-- GRADIENT: Outline -->
    <linearGradient id="gradientPinkPurple" gradientUnits="userSpaceOnUse" x1="480" y1="169.998" x2="480" y2="334.06">
      <stop offset=".42" stop-color="var(--home-chris-outline-b)"/>
      <stop offset=".64" stop-color="var(--home-chris-outline-a)"/>
      <stop offset=".77" stop-color="var(--home-chris-outline-b)"/>
    </linearGradient>

    <!-- GRADIENT: Main -->
    <linearGradient id="gradientDuskTop" gradientUnits="userSpaceOnUse" x1="480" y1="169.998" x2="480" y2="334.06">
      <stop offset="0" stop-color="var(--home-chris-upper-a)"/>
      <stop offset=".167" stop-color="var(--home-chris-upper-b)"/>
      <stop offset=".333" stop-color="var(--home-chris-upper-c)"/>
      <stop offset=".5" stop-color="var(--home-chris-upper-d)"/>
      <stop offset="1" stop-color="var(--home-chris-upper-d)"/>
    </linearGradient>

    <linearGradient id="gradientDuskBottom" gradientUnits="userSpaceOnUse" x1="480" y1="169.998" x2="480" y2="334.06">
      <stop offset=".5" stop-color="var(--home-chris-lower-a)"/>
      <stop offset="1" stop-color="var(--home-chris-lower-b)"/>
    </linearGradient>

    <!-- GRADIENT: Shine Spots -->
    <radialGradient id="gradientShine">
      <stop offset="0" stop-color="{{ shine_color }}"/>
      <stop offset=".75" stop-color="{{ shine_color }}" stop-opacity="0"/>
      <stop offset="1" stop-color="{{ shine_color }}" stop-opacity="0"/>
    </radialGradient>

    <!-- GRADIENT: Shine Overlay -->
    <linearGradient id="gradientShineOver" gradientUnits="userSpaceOnUse" x1="120.234" y1="-143.29" x2="684.493" y2="330.18">
      <stop offset=".45" stop-color="{{ shine_color }}" stop-opacity="0"/>
      <stop offset=".5" stop-color="{{ shine_color }}" stop-opacity="0.9"/>
      <stop offset=".55" stop-color="{{ shine_color }}" stop-opacity="0"/>
    </linearGradient>
  </defs>

  <!-- Chris -->
  <g class="home-svg__chris-group home-svg__group" role="img" aria-label="Chris">

    <!-- Wires -->
    <g class="home-svg__wires" style="--wire-count: {{ wire_count }};">
      {% for w in range(0, wire_count) -%}
        {% set wire_lum = wire_color_lum_end + (wire_color_lum_start - wire_color_lum_end) * (w/wire_count) %}
        <use xlink:href="#home-svg-chris-shape" class="home-svg__wire" fill="none" stroke="hsla(var(--home-chris-wire-hue, 180), 100%, {{ wire_lum }}%, .8)" stroke-width="2" style="--w: {{ w }};" />
      {%- endfor %}
    </g>
    
    <g class="home-svg__chris-main">
      <!-- Fake depth layers -->
      <g stroke-width="2.5" class="home-svg__chris-depth-group">
      {% for d in range(0, depth_count) -%}
        {% set depth_sat = depth_far_sat + (depth_close_sat - depth_far_sat) * (d/depth_count) %}
        {% set depth_lux = depth_far_lux + (depth_close_lux - depth_far_lux) * (d/depth_count) %}
        {% set depth_scale_x = (1 - depth_min_scale * depth_factor_x) * (d/depth_count) + depth_min_scale * depth_factor_x %}
        {% set depth_scale_y = (1 - depth_min_scale * depth_factor_y) * (d/depth_count) + depth_min_scale * depth_factor_y %}
        {% set color_h %}calc(var(--home-chris-depth-hue)){% endset %}
        {% set color_s %}calc(var(--home-chris-depth-sat, 1) * {{ depth_sat | round(3) }}%){% endset %}
        {% set color_l %}calc(var(--home-chris-depth-lux, 0%) + {{ depth_lux | round(3) }}%){% endset %}
        <use
          xlink:href="#home-svg-chris-shape"
          class="home-svg__group home-svg__chris-depth"
          style="transform: scale({{ depth_scale_x | round(3) }}, {{ depth_scale_y | round(3) }}); color: hsl({{ color_h }}, {{ color_s }}, {{ color_l }});" />
      {%- endfor %}
      </g>

      <!-- Outline -->
      <use xlink:href="#home-svg-chris-shape" fill="none" stroke="url(#gradientPinkPurple)" stroke-width="3" />

      <!-- Gradient -->
      <g clip-path="url(#home-svg-chris-clip)">
        <rect x="0%" y="0" width="100%" height="100%" fill="url(#gradientDuskTop)" />
        <path fill="url(#gradientDuskBottom)" d="M0 257v247h971V249H866c-5 0-18 7-22 7l-10-2-16 3-13-2c-10 0-16-4-26-4-8 0-13 4-18 4l-22 1h-13c-6 0-10-3-16-3-11 0-14-5-25-5l-7 1-7-1c-3 0-19 9-23 9l-13 1-11-1-12 1c-2 0-11-4-17-4-18 0-21-6-30-6-7 0-14 7-21 7s-16 3-20 3-9-5-17-5-10 5-20 5-15-4-22-4c-13 0-15-6-22-6-8 0-11 2-15 2s-10 6-18 6l-20 1c-6 0-10-3-15-3l-21-3c-5 0-18 4-26 4s-10-3-14-3c-9 0-14-5-20-5-4 0-16 4-22 4l-118 9c-9 0-15-8-24-8l-6 1-10-1c-10 0-16 5-22 5H0z" />
      </g>

      <!-- Inner Shadow  -->
      <g clip-path="url(#home-svg-chris-clip)">
        <use xlink:href="#home-svg-chris-shape" fill="none" stroke="var(--home-chris-inner)" stroke-width="1" filter="url(#violetShadeGlow)" />
        <use xlink:href="#home-svg-chris-shape" fill="none" stroke="var(--home-chris-inner)" stroke-width="1" filter="url(#violetShadeGlow2)" />
      </g>

      <!-- Shine Overlay (hide initially, show with CSS) -->
      <g clip-path="url(#home-svg-chris-clip)">
        <rect x="78.13" y="161.21" fill="url(#gradientShineOver)" width="804.73" height="186.89" class="home-svg__name-shineOver" style="opacity:0" />
      </g>

      <!-- Outline Overlay (hide initially, show with CSS) -->
      <g mask="url(#home-svg-chris-mask-outline-double)">
        <rect x="78.13" y="161.21" fill="url(#gradientShineOver)" width="804.73" height="186.89" class="home-svg__name-shineOver home-svg__name-shineOver--delayed" style="opacity:0" />
      </g>

      <!-- Shine Spots -->
      <g mask="url(#home-svg-chris-mask-outline)">
        <circle fill="url(#gradientShine)" cx="119" cy="178.95" r="48.81"/>
        <circle fill="url(#gradientShine)" cx="735.67" cy="168.52" r="36.76"/>
        <ellipse fill="url(#gradientShine)" cx="523.35" cy="173.84" rx="63.03" ry="26.07"/>
        <ellipse fill="url(#gradientShine)" cx="363.35" cy="226.84" rx="40.05" ry="13.95"/>
        <circle fill="url(#gradientShine)" cx="299.35" cy="169.84" r="19.17"/>
        <ellipse fill="url(#gradientShine)" cx="222.35" cy="285.84" rx="40.05" ry="13.95"/>
        <ellipse fill="url(#gradientShine)" cx="769" cy="285.84" rx="28.44" ry="13.95"/>
        <circle fill="url(#gradientShine)" cx="626.35" cy="303.114" r="39.29"/>
        <ellipse fill="url(#gradientShine)" cx="563.72" cy="227.84" rx="26.79" ry="7.9"/>
        <ellipse fill="url(#gradientShine)" cx="790.35" cy="227.84" rx="29.94" ry="7.9"/>
      </g>

      {# <circle fill="url(#gradientShine)" cx="736" cy="173" r="12" /> #}

      <g class="home-svg__glare-group">
        <g class="home-svg__glare home-svg__group">
          <ellipse fill="url(#gradientShine)" cx="0" cy="0" ry="16" rx="4" />
          <ellipse fill="url(#gradientShine)" cx="0" cy="0" rx="16" ry="4" />
        </g>
      </g>
    </g>

    <g class="home-svg__chris-flash">
      <use xlink:href="#home-svg-chris-shape" fill="{{ shine_color }}" stroke="{{ shine_color }}" filter="url(#flashGlow)" />
      {# <use xlink:href="#home-svg-chris-shape"  fill="{{ shine_color }}" stroke="{{ shine_color }}" /> #}
    </g>
  </g>

  <!-- Creative Developer -->
  <g class="home-svg__creativedeveloper-text home-svg__group" letter-spacing=".7em">
    <text text-anchor="middle" x="50%" y="387">
      {{ 'homeTitle.creaDev' | i18n | upper }}
    </text>
  </g>
</svg>
{% endset %}
{{ svgTitle | htmlmin | safe }}