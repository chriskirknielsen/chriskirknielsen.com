---
tags: [fonts]
---

{% extends "components/head.njk" %}

{% set isMiniSite = true %}

{# Initialise variable outside loop scope #}
{%- set fontSpecimenStyles = '' -%}

{%- for fontSpecimenName, fontSpecimensFaces in fontSpecimen -%}
	{# Preload the "default" font #}
	{%- set fontPreload -%}<link rel="preload" href="{{ './' + fontSpecimensFaces[0].file | url }}" as="font" type="font/woff2" crossorigin>{% endset %}
	
	{%- set fontSpecimenStyles -%}
		{%- for fontSpecimenFace in fontSpecimensFaces -%}
		@font-face {
			font-family: '{{ fontSpecimenName }}';
			src: url('{{ './' + fontSpecimenFace.file | url }}') format('woff2');
			font-weight: {{ fontSpecimenFace.weight or 400 }};
			font-style: {{ fontSpecimenFace.style or 'normal' }};
			font-display: swap;
		}
		{%- endfor -%}
		.specimen { font-family: '{{ fontSpecimenName }}', {{ (fontSpecimenFallback | safe) or 'sans-serif' }}; }
	{%- endset -%}
{%- endfor -%}

{% block headStart %}
<!doctype html>
<html lang="en" class="no-js">
<head>
	{{ fontPreload }}
{% endblock %}
{# include "components/head.njk" #}
{% block headEnd %}
	<script>document.documentElement.classList.remove('no-js')</script>
	<style>
	{%- if fontSpecimenStyles -%}
		{{- fontSpecimenStyles | cssmin | safe -}}
	{%- endif -%}

	{%- if styleOverrides -%}
		{# Add page-specific styles inline #}
		{%- set pageStyleGroup = "" -%}

		{%- for styleOverride in styleOverrides -%}
			{%- set pagestylelink %}{{ assets.fontSpecimenStyles }}/{{ styleOverride | trim(' ') }}.css{% endset -%}
			{%- set pagestyle %}{% include pagestylelink %}{% endset -%}
			{%- set pageStyleGroup = pageStyleGroup + pagestyle -%}
		{%- endfor -%}

		{{- pageStyleGroup | cssmin | safe -}}
	{%- endif -%}
	</style>
</head>

{% macro fontPreviewer(previewOptions = '', defaultText = 'Type Anything', warningMessages = '') %}
	<form class="full-content preview" id="font-previewer">
		<div class="preview-fallback">
			<label for="font-preview-fallback" class="visually-hidden">Preview:</label>
			<input type="text" id="font-preview-fallback" class="specimen specimen-dlig preview-fallback-input" value="{{ defaultText }}" placeholder="Type anything" />
			<p class="fallback-warning">To get a rich preview, you may need JavaScript enabled or a better Internet service.</p>
		</div>

        <div class="preview-input-wrap preview-interactive-piece">
            <label for="preview-input">Preview:</label>
            <input type="text" placeholder="Type anything" id="preview-input" />
            <button type="button" id="preview-update">Update</button>
        </div>

		{% if warningMessages %}
			{% for warningMessageId, warningMessageMarkup in warningMessages %}
			<p class="preview-warning" id="{{ warningMessageId }}" hidden>{{ warningMessageMarkup | safe }}</p>
			{% endfor %}
		{% endif %}

        <output for="preview-input" class="preview-interactive-piece">
            {{ caller() }}
        </output>

        <div class="preview-actions preview-interactive-piece">
            <div class="preview-options flow" style="--flow: 0.5rem;">
				{% for optKey, optData in previewOptions %}
                <p class="preview-option">
                    <input type="checkbox" name="{{ optKey }}" data-preview-option id="preview-option-{{ optKey }}" {% if optData.default %}checked{% endif %} />
                    <label for="preview-option-{{ optKey }}">{{ optData.label }}</label>
                </p>
				{% endfor %}
            </div>

            <button type="button" id="save-preview" class="preview-save" hidden>Save as PNG</button>
        </div>
    </form>
{% endmacro %}

<body>
	<header class="header">
		<p class="text-center"><a href="{{ '/fonts/' | url }}">A font by Christopher Kirk-Nielsen</a></p>
	</header>

	<main class="content flow" id="content">
		{% block layoutContent %}{{ layoutContent | safe }}{% endblock %}
	</main>

	<footer class="footer">
		Font built with {{ fontLove or 'love' }}
		by <a href="{{ metadata.url | url }}">Christopher Kirk-Nielsen</a>
		|
		<a href="{{ '/fonts/' | url }}">Font Directory</a>
	</footer>

	<script>
	{% set fontSpecimenScripts %}
		var fontPreviewerForm = document.getElementById('font-previewer');
		var fontPreviewInput = document.getElementById('preview-input');
		var fontPreviewOutput = document.getElementById('preview-output');
		var fontPreviewSvg = document.getElementById('preview-svg');
		var fontPreviewSave = document.getElementById('save-preview');
		var fontNameSlug = '{{ title | stripHyphenChars | slug }}';

		function updateFontPreviewText() { 
			fontPreviewOutput.textContent = fontPreviewInput.value.trim() || '{{ fontSpecimenSampleDefault | safe }}';
		}

		function updateFontPreviewOptions(e = null) {
			var previewOptions = !e ? false : e.target.closest('[data-preview-option]') || false;
			if (!previewOptions) { previewOptions = Array.from(document.querySelectorAll('[data-preview-option]')); }
			else { previewOptions = [previewOptions]; }

			previewOptions.forEach(function (previewOption) {
				var classToToggle = previewOption.getAttribute('name');
				var isToggleAdd = previewOption.checked;

				if (isToggleAdd) { fontPreviewOutput.classList.add('specimen-'+classToToggle); }
				else { fontPreviewOutput.classList.remove('specimen-'+classToToggle); }
			});
		}

		document.getElementById('preview-update').addEventListener('click', function (e) {
			updateFontPreviewText();
			updateFontPreviewOptions(e);
		});
		document.addEventListener('click', function (e) {
			var ligCode = e.target.closest('.ligature-sample-code');
			if (!ligCode) { return; }
			var ligText = ligCode.parentElement.querySelector('input');
			ligText.select();
			document.execCommand('copy');
			ligCode.classList.add('copied');
			setTimeout(function() { ligCode.classList.remove('copied'); }, 300);
		});
		fontPreviewerForm.addEventListener('keyup', updateFontPreviewText);
		fontPreviewerForm.addEventListener('change', updateFontPreviewOptions);
		fontPreviewerForm.addEventListener('submit', function (e) {
			updateFontPreviewText();
			e.preventDefault();
			return false;
		});
		updateFontPreviewText();
		updateFontPreviewOptions();
	{% endset %}
	{{ fontSpecimenScripts | jsmin | safe }}
	</script>
	<script src="../download-preview.js" defer></script>
</body>

</html>
{% endblock %}