.header {
	z-index: #{layer-index('header')};

	&-inner {
		--header-gap: clamp(var(--size-m), 2.5vw, var(--size-l));

		display: flex;
		gap: var(--header-gap);
		align-items: center;
		flex-wrap: wrap;
		padding-block: var(--size-m);
	}

	&-logo {
		flex: 0 1 auto;
		min-width: 1em;
		margin-inline-end: auto;

		color: var(--t-color-main-med);
		font-size: clamp(1rem, 1rem + (2 - 1) * ((100vw - 20rem) / (32 - 20)), 2rem);
		text-decoration: none;

		& > svg {
			--logo-transition: var(--logo-transition-duration, 420ms) var(--logo-transition-easing, var(--easing-circ-out));
			--logo-stroke-width: 0;

			height: 1em;
			width: auto;
			overflow: visible;

			transition: filter var(--logo-transition);

			& use {
				fill: var(--t-header-logo-fill, currentColor);
				stroke: var(--t-header-logo-fill-active, var(--t-color-main-min));
				stroke-width: var(--logo-stroke-width, 0);
				clip-path: var(--logo-letter-clip, none); // Self-masking to only reveal the stroke inside the shape

				transition: var(--logo-transition);
				transition-property: fill, fill-opacity, stroke-opacity, stroke-width;

				&[data-k] {
					transition-delay: 100ms;
				}
				&[data-n] {
					transition-delay: 200ms;
				}
			}
		}

		&:is(:hover, :focus) > svg use {
			--logo-stroke-width: 16;
		}
	}
}

.menu {
	display: flex;
	gap: var(--header-gap);
	align-items: baseline;
	flex-wrap: wrap;

	&-item {
	}

	&-link {
		font-weight: 700;
		text-decoration: none;
		color: var(--t-text-color);
		white-space: nowrap;

		&:is(:hover, :focus) {
			text-decoration: underline;
			color: var(--t-cta-text-color);
		}
	}
}
