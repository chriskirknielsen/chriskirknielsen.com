.card {
	position: relative;

	flex: 1 1 0;
	display: flex;
	flex-direction: column;
	overflow: hidden;

	border: 1px solid var(--theme-accent-color);
	border-radius: var(--theme-corner-radius);

	&-image {
		flex-shrink: 0;
	}

	&-image a {
		display: block;
		overflow: hidden;
	}

	/* //For :has() support:
	&-image a:is(:hover) img,
	&:focus-within &-image a img {
		transform: scale(1.0625) rotate(1deg);
	}
	&:has(a:is(:hover, :focus)) &-image a img {
		transform: scale(1.0625) rotate(1deg);
	}
	//*/

	// While waiting for :has() to be supported, since the card should only react to links
	// We can remove pointer events so the :hover state is only active on links which restore the pointer-events
	& {
		pointer-events: none;
	}
	& a {
		pointer-events: auto;
	}
	&:hover a img,
	&:focus-within &-image a img {
		transform: scale(1.0625) rotate(1deg);
	}

	&-image img {
		width: 100%;

		background: var(--theme-color-gray-med);

		transition: transform 250ms cubic-bezier(0.67, 0, 0.33, 1);
	}

	&-content {
		display: flex;
		flex-direction: column;
		flex-grow: 1;
		padding: var(--size-m);

		background-color: var(--theme-bg-neutral-color);
	}

	&-title {
		position: relative;

		&::before {
			content: '';

			position: absolute;
			left: calc(-1 * var(--size-m));

			width: var(--theme-corner-radius);
			height: calc(var(--site-heading-line-height) * 1em);

			background: var(--theme-accent-color);
			border-radius: 0 calc(2 * var(--theme-corner-radius)) calc(2 * var(--theme-corner-radius)) 0;
		}
	}
}
