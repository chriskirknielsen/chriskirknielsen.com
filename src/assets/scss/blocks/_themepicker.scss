body {
	--themepicker-height: 9rem;
	--themepicker-transition: var(--C-base-duration);

	transition: transform var(--themepicker-transition) var(--easing-in-out);
	will-change: transform; // Last-resort improvement which does help a bit!

	[data-themepicker='open'] > & {
		transform: translateY(var(--themepicker-height));
	}
}

.themepicker {
	.no-js &,
	.no-js &-toggler {
		display: none;
	}

	--picker-gap: calc(var(--C-content-gutter) / 2);
	--picker-button-border-size: 2px;
	--picker-text: var(--t-color-gray-min);
	--picker-bg: var(--t-color-gray-max);
	--picker-close-size: var(--size-m);
	--picker-close-padding: var(--size-s);

	position: absolute;
	inset-block-end: 100%;
	inset-inline: 0;
	z-index: #{layer-index('themepicker')};

	display: flex;
	flex-direction: column;
	justify-content: center;
	gap: var(--picker-gap);
	height: var(--themepicker-height);
	padding: var(--picker-gap) 0;
	overflow: hidden;

	color: var(--picker-text);
	background-color: var(--picker-bg);
	box-shadow: 0 -2px 0 var(--picker-text) inset;

	transform: translateY(-50%);

	transition: transform var(--themepicker-transition) var(--easing-in-out);

	[data-themepicker='open'] & {
		transform: translateY(0%);

		transition-delay: calc(var(--themepicker-transition) / 3); // Slight transition when opening
	}

	&-toggle {
		flex-shrink: 0;
	}

	&-icon {
		width: 1.5em;
		fill: currentColor;
	}

	&-title {
		padding-inline: calc(var(--picker-close-padding) * 2 + var(--picker-close-size) + var(--picker-gap));

		text-align: center;
		line-height: 1.1;

		& kbd {
			all: inherit;
			text-decoration: underline dotted;
			text-decoration-skip-ink: none;
			text-decoration-thickness: 2px;
		}
	}

	&-list {
		display: flex;
		gap: var(--picker-gap);
		max-width: 100%;
		overflow-x: auto;
		padding: var(--picker-gap);
	}

	&-item {
		flex: 0 0 auto;
		display: flex;
		min-width: clamp(7rem, 33vw, 10rem);

		&:first-child {
			margin-inline-start: auto;
		}
		&:last-child {
			margin-inline-end: auto;
		}
	}

	&-button {
		position: relative;

		display: flex;
		gap: var(--size-xs);
		justify-content: center;
		width: 100%;
		padding: var(--size-xs) var(--size-xs);

		color: var(--themepicker-a);
		border-width: var(--picker-button-border-size);
		border-style: solid;
		border-color: var(--picker-button-border-color, transparent);
		background-color: var(--themepicker-bg);
		box-shadow: 0 0 0 1px var(--picker-text);

		transition: none !important; // Exceptions might overwrite this so we apply important, yuck I know!

		&:is(:hover, :focus) {
			--picker-button-border-color: var(--themepicker-b);
		}

		&[aria-pressed='true'] {
			&::before {
				content: '';

				position: absolute;
				inset-block-start: calc(var(--picker-button-border-size) * -1);
				inset-inline: 0;

				width: 0;
				height: 0;
				margin: 0 auto;

				border-width: 0.5em 0.325em 0 0.325em;
				border-style: solid;
				border-color: var(--themepicker-b) transparent transparent;
			}
		}
	}

	&-palette {
		flex: 0 0 auto;
		width: 1.5em;

		& > :nth-child(1) {
			fill: var(--themepicker-a);
		}
		& > :nth-child(2) {
			fill: var(--themepicker-b);
		}
		& > :nth-child(3) {
			fill: var(--themepicker-c);
		}
	}

	&-close {
		--close-color: currentColor;
		--close-border: transparent;
		--close-bg: var(--t-color-aux-max);

		position: absolute;
		inset-block-start: var(--picker-close-padding);
		inset-inline-end: var(--picker-close-padding);

		padding: var(--size-2xs);

		& > svg {
			width: var(--picker-close-size);
			height: var(--picker-close-size);
		}
	}
}
