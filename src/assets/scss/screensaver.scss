:root[data-screensaver] {
	overflow: hidden;

	& > body {
		will-change: unset; // will-change creates a new stacking context meaning the screensaver block fits the <body> and not the <html>, the former can be way taller than the viewport
	}
	.header-logo > svg use {
		transition: none !important; // The logo in the header has transitions on each shape, making the bounce-contact event change the colours unevenly
	}
}
.screensaver {
	$screensaver-animation-time: 5000ms;
	$screensaver-logo-size: 200px;

	--t-header-logo-fill: initial; // Prevent the fill from the header to be passed in this <use>

	position: fixed;
	inset: 0;
	z-index: 99;

	display: flex;

	background: black;

	& div {
		display: inline-block;

		animation: scrsvrX calc(#{$screensaver-animation-time} * var(--scrnsvr-speed-x, 1.2)) linear var(--scrnsvr-delay-x, -1618ms) alternate infinite both;
	}

	& svg {
		display: block;
		width: $screensaver-logo-size;
		height: auto;

		animation: scrsvrY calc(#{$screensaver-animation-time} * var(--scrnsvr-speed-y, 1)) linear var(--scrnsvr-delay-y, -314ms) alternate infinite both;

		& > use {
			fill: var(--scrnsvr-logo-fill, white);
		}
	}

	& .confetti {
		position: absolute;
		inset-block-end: 0;
		inset-inline-start: 0;

		width: 10px;
		height: 10px;

		background: var(--confetti-color);

		will-change: transform;
		translate: calc(var(--confetti-translate, 50) * 0.1vw + 50vw) 200%;
		rotate: calc(var(--confetti-rotate) * 1turn);
		animation: scrsvrConfettiTransform calc(var(--confetti-speed, 1) * 3s) cubic-bezier(0.455, 0.03, 0.515, 0.955) calc(var(--confetti-delay) * 1ms) forwards,
			scrsvrConfettiFlip 100ms linear infinite alternate;
	}
}

@media (prefers-reduced-motion: reduce) {
	.screensaver {
		& div {
			margin: auto;
		}
		& div,
		& svg {
			animation: none;
		}
		& svg > use {
			animation: scrsvrRainbow 10s linear 0s infinite both !important;
		}
	}

	#dvd-logo,
	#dvd-logo * {
		transition: initial !important;
	}
}

@keyframes scrsvrX {
	to {
		transform: translateX(calc(100vw - 100%));
	}
}

@keyframes scrsvrY {
	to {
		transform: translateY(calc(100vh - 100%));
	}
}

@keyframes scrsvrConfettiTransform {
	20% {
		translate: calc(var(--confetti-translate, 50) * 1vw) -100vh;
		animation-timing-function: cubic-bezier(0.33, 0, 0, 0), linear;
	}
	100% {
		translate: calc(var(--confetti-translate, 50) * 1vw) 200%;
	}
}

@keyframes scrsvrRainbow {
	0%,
	100% {
		fill: hsl(0, 100%, 50%);
	}
	@for $p from 1 to 10 {
		$a: 36 * $p;
		#{$p*10%} {
			fill: hsl($a, 100%, 50%);
		}
	}
}

@keyframes scrsvrConfettiFlip {
	to {
		scale: var(--confetti-scale, 1) 0;
	}
}
