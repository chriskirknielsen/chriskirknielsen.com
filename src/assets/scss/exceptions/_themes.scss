@include default-schemes {
	.header-logo {
		& > svg {
			--logo-transition-duration: var(--T-dusk, 200ms) var(--T-dawn, 420ms);

			& use {
				fill-opacity: 1;
				stroke: var(--t-color-main-min);
				stroke-width: var(--T-dusk, 3) var(--T-dawn, var(--logo-stroke-width, 0));
				stroke-opacity: var(--T-dusk, 0) var(--T-dawn, 1);
				clip-path: var(--T-dusk, none) var(--T-dawn, var(--logo-letter-clip));
			}
		}

		&:is(:hover, :focus) > svg {
			filter: var(--T-dusk, drop-shadow(0 0 0.0625rem currentColor) drop-shadow(0 0 0.25rem currentColor)) var(--T-dawn, none);
		}

		&:is(:hover, :focus) > svg use {
			fill: var(--T-dusk, var(--t-color-gray-max)) var(--T-dawn, var(--t-header-logo-fill));
			fill-opacity: var(--T-dusk, 0) var(--T-dawn, 1);
			stroke-opacity: 1;

			animation: var(--T-dusk, cknLogoNeon var(--C-base-duration) var(--easing-in-out)) var(--T-dawn, none);

			&[data-c] {
				animation-delay: 100ms;
			}
			&[data-n] {
				animation-delay: 300ms;
			}
		}

		@keyframes cknLogoNeon {
			0%,
			40%,
			80% {
				stroke-opacity: 0;
			}
			20% {
				stroke-opacity: 0.5;
			}
			60% {
				stroke-opacity: 0.75;
			}
			100% {
				stroke-opacity: 1;
			}
		}
	}

	.bigboi {
		@include generate-light-dark-vars('bigboi-outline-color', white, black);
		@include generate-light-dark-vars('bigboi-line-color', var(--t-color-main-med), var(--t-color-aux-med));
		--bigboi-bg-mask: radial-gradient(ellipse at center, rgba(0 0 0 / 20%), rgba(0 0 0 / 0%));

		position: relative;

		outline: 2px solid var(--bigboi-outline-color);

		&::before {
			$grid-line-width: 1.5px;

			content: '';

			position: absolute;
			inset: 0;

			background: repeat 50% 50% / 2rem 2rem;
			background-image: linear-gradient(var(--bigboi-line-color) #{$grid-line-width}, transparent #{$grid-line-width}),
				linear-gradient(90deg, var(--bigboi-line-color) #{$grid-line-width}, transparent #{$grid-line-width});

			-webkit-mask-image: var(--bigboi-bg-mask);
			mask-image: var(--bigboi-bg-mask);
		}
	}

	:where(button, .cta):is(:hover, :focus) {
		transition-property: box-shadow, border-color;
		transition-duration: var(--t-cta-transition-duration, 0ms);
		transition-timing-function: cubic-bezier(0.33, 1.5, 0.33, -0.2);
	}

	.cardblock {
		box-shadow: var(--T-dusk, 0 0.25em 1em -0.5em var(--t-accent-color)) var(--T-dawn, 0 0.25em 0 -1px var(--t-accent-color), 0 0.25em 0 var(--cardblock-border-color));
	}

	.callout {
		padding-block-start: var(--size-xl);

		background: linear-gradient(90deg, transparent, var(--ctx-bg)) 100% 0 repeat-y,
			repeating-linear-gradient(var(--t-color-main-med) 0, var(--t-color-main-med) 2px, transparent 2px, transparent 6px) 0 0 repeat-x,
			linear-gradient(90deg, var(--t-color-main-med), var(--ctx-bg)) 0 100% no-repeat;
		background-size: 100% 1.25em, 100% 1.25em, 100% 0.11em;

		&-label {
			position: absolute;
			inset-block-start: -0.25em;
			inset-inline-start: var(--C-content-gutter);

			padding: 0 var(--C-content-gutter);

			font-size: max(var(--size-xl), 1.75em);
			color: var(--t-color-main-min);
			text-shadow: 0.075em 0.075em 0 var(--ctx-bg), 0.125em 0.125em 0 var(--t-color-main-med);
			background-color: var(--ctx-bg);
		}
	}

	.about-quotebox {
		box-shadow: 0.5em 0.5em 2em -1em var(--t-color-main-med);
	}

	.codeblock[data-lang] {
		overflow: hidden;

		border-radius: calc(2 * var(--t-corner-radius)) calc(2 * var(--t-corner-radius)) 0 0;
	}

	.u-background-bg-alt-color {
		@include generate-light-dark-vars('ctx-bg', hsl(33, 100%, 82%), hsl(263, 41%, 22%));
	}
}

@include theme('vapor') {
	$body-bg-min-width: get-token('constants', 'content-width');
	$body-bg-image: asset-path(get-token('themes', 'vapor', 'images', 'body-bg-image'));
	$body-bg-image-width: 128px;
	$body-bg-image-gutter: 2rem;

	background: linear-gradient(45deg, var(--t-color-aux-max), var(--t-color-main-max)) fixed;

	@media (min-width: calc(#{$body-bg-min-width} + #{$body-bg-image-width * 2} + #{$body-bg-image-gutter} * 2)) {
		body {
			will-change: initial; // Cancel performance boost to ensure the background image stays fixed in the right spot
		}
		body::before,
		body::after {
			content: '';

			position: fixed;
			inset: auto auto 0;
			z-index: #{layer-index('footer', 1)}; // Layer them over the footer

			width: clamp(#{$body-bg-image-width}, (100% - #{$body-bg-min-width}) / 2 - #{$body-bg-image-gutter}, #{$body-bg-image-width} * 3);
			max-height: 100vh;
			max-height: 100dvh;
			aspect-ratio: 314/640; // Hardcoded aspect ratio for the image; yucky, I knowâ€¦

			background: url('#{$body-bg-image}') no-repeat 50% 0 / 100% auto;
		}

		body::before {
			inset-inline-start: 0;
		}
		body::after {
			inset-inline-end: 0;
			transform: scaleX(-1);
		}
	}

	:where(button, .cta):where(:not(.button-reset)) {
		transition: box-shadow var(--C-base-duration) var(--easing-in-out);
	}

	.postlist-yeargroup {
		padding-block: 0;

		color: var(--t-color-gray-max);
		border: 0;
		border-radius: var(--t-corner-radius) 1em 1em var(--t-corner-radius);
		background: var(--t-color-main-med);
	}

	.about-quotebox {
		--quotebox-font: var(--t-font-heading);
		--quotebox-transform: uppercase;
		--quotebox-weight: 400;
		--quotebox-corner-radius: 0;

		position: relative;

		&::before {
			content: '';
			position: absolute;
			inset: 0.5em -0.5em -0.5em 0.5em;
			z-index: -1;

			border: 2px solid var(--t-color-aux-med);
		}
	}

	.cardblock {
		&-title > a {
			line-height: 1.2;
			padding-block-start: 0.125em;
		}
	}

	.callout-label {
		&::after {
			content: 'â€¦'; // Hint of exasperation
		}

		// Pixelated text shadow
		text-shadow: 2px 2px 0 var(--t-color-main-max), 4px 4px 0 var(--t-color-main-max), 6px 6px 0 var(--t-color-main-max), 8px 8px 0 var(--t-color-main-max);
	}
}

@include theme('y2k') {
	--y2k-bar-grad: linear-gradient(90deg, var(--t-color-main-min), var(--t-color-main-max));
	--t-scrollbar-color: #7c7c7c;
	--t-scrollbar-bg: #dddddd;
	--t-custom-easing: steps(8, jump-none);

	&::-webkit-scrollbar,
	& ::-webkit-scrollbar,
	&::-webkit-scrollbar-track,
	& ::-webkit-scrollbar-track {
		background-color: var(--t-scrollbar-bg);
	}

	&::-webkit-scrollbar-thumb,
	& ::-webkit-scrollbar-thumb {
		background: var(--t-scrollbar-color);
		border: 2px solid;
		border-color: var(--t-cta-border-color);
	}

	:focus {
		outline: 1px dotted currentColor;
	}

	:where(button, .cta) {
		--btn-line-height: 1.2;

		&:focus {
			outline-offset: -4px;
			outline: 1px dotted #4c4c4c;
		}
	}

	.header-logo > svg {
		--logo-transition-easing: steps(3);
	}

	hr {
		height: unset;
		border-radius: 0;
		border: 2px ridge var(--t-color-gray-med);
	}

	.filtering-item input[type='radio']:focus-visible + label {
		outline-offset: -4px;
		outline: 1px dotted black;
	}

	.postlist-yeargroup {
		padding-block: 0;

		color: var(--t-color-gray-max);
		border: 0;
		background: var(--y2k-bar-grad);
	}

	.postlist-post + .postlist-post {
		position: relative;

		&::before {
			content: '';

			position: absolute;
			inset-inline: 0;
			inset-block-start: calc(var(--flow-space, var(--size-xl)) * -0.5);

			width: 100%;
			height: 1px;

			background: currentColor;
		}
	}

	.post-footer-avatar > img {
		border-radius: 0;
	}

	.about-quotebox,
	.callout {
		position: relative;

		padding: calc(var(--size-s) + var(--y2k-bar-height, 1.5rem)) var(--size-s) var(--size-s);

		color: var(--t-cta-text-color);
		border-width: 2px;
		border-style: solid;
		border-color: var(--t-cta-border-color);
		background: var(--t-cta-bg);
	}

	.about-quotebox::before,
	.callout-label {
		position: absolute;
		inset: 1px 1px auto;

		height: var(--y2k-bar-height, 1.5rem);

		background: var(--y2k-bar-grad);
	}

	.about-quotebox {
		--quotebox-font: Courier, var(--fontstack-monospace);
		--quotebox-style: normal;
		--quotebox-weight: 400;
	}

	.about-quotebox::before {
		content: '';
	}

	.callout {
		--y2k-bar-height: 2rem;

		&-label {
			display: flex;
			align-items: center;
			padding-block: 0.125em;
			padding-inline: inherit;
			gap: 0.5em;

			font-size: 1rem;
			font-weight: 300;
			font-family: var(--fontstack-monospace);
			color: white;

			&::before {
				content: var(--callout-emoji, 'ðŸ—’');
			}
		}
	}

	.codeblock :is(.token.comment, .token.doctype) {
		--token-gray-med: hsl(240, 33%, 42%);
	}

	[data-filtered-item] {
		transition-timing-function: var(--t-custom-easing);
	}

	.footer-logo {
		position: relative;

		background: linear-gradient(#4d90fb, #c2e6fb);

		transform-style: preserve-3d;

		& > svg {
			overflow: visible;

			stroke: var(--t-color-aux-min);
			stroke-width: 1px;
			fill: var(--t-color-aux-med);
			fill: url('#logo-ie-grad');
		}

		&::before {
			--halo-width: clamp(2px, 0.25px + 0.5vw, 4px);

			content: '';

			position: absolute;
			inset: 0;

			width: calc(clamp(3rem, 50%, 8rem) / 2);
			aspect-ratio: 0.35;
			margin: auto;

			border-width: calc(var(--halo-width) / 2) 0 calc(var(--halo-width) / 2) var(--halo-width);
			border-style: solid;
			border-color: #faa400;
			border-radius: 50%;
			box-shadow: inset calc(var(--halo-width) / 2) 0 0 calc(var(--halo-width) / 2) #ffe907;

			transform: rotateZ(45deg) rotateY(1deg) translateZ(calc(var(--halo-width) / 20));
		}
	}
}

@include theme('neotokyo') {
	--cut-size: clamp(0.25rem, 0.375em, 0.75rem);

	.header-logo {
		& > svg {
			--nt-logo-filter: var(--t-header-logo-fill);
			filter: drop-shadow(0 0 0.5em var(--nt-logo-filter));
		}

		&:is(:hover, :focus) > svg {
			--nt-logo-filter: var(--t-header-logo-fill-active);
		}
	}

	.bigboi {
		$neotokyo-bigboi-bg-size: 3px;
		background: linear-gradient(var(--ctx-bg), var(--ctx-bg) #{$neotokyo-bigboi-bg-size * 0.5}, var(--t-color-main-max) 0, var(--t-color-main-max) #{$neotokyo-bigboi-bg-size})
			50% 50% / 100% 3px;
		outline: 2px solid var(--t-color-main-med);
	}

	:where(button, .cta):where(:not(.button-reset)):where(:not(.themepicker-button, .themepicker-close)) {
		position: relative;
		isolation: isolate; // Remove from global stacking context (so the ::before pseudo can use z-index:-1 without going below parent elements)

		border: var(--btn-border-size, var(--t-cta-border-width)) solid transparent;
		background: none;
		box-shadow: none;

		&:is(:hover, :focus) {
			filter: drop-shadow(0 0 0.5em hsla(183, 72%, 47%, 0.5));
		}

		&::before {
			content: '';

			position: absolute;
			inset: calc(var(--btn-border-size, var(--t-cta-border-width)) * -0.99); // Not using -1 so subpixel values can avoid being cut off
			z-index: -1;

			clip-path: polygon(0 0, 100% 0, 100% calc(100% - var(--cut-size)), calc(100% - var(--cut-size)) 100%, 0 100%);

			border-width: var(--btn-border-size, var(--t-cta-border-width));
			border-style: var(--btn-border-style, solid);
			border-color: var(--btn-border-color, var(--t-cta-border-color, currentColor));
			border-radius: var(--btn-border-radius, var(--t-corner-radius));

			background-color: var(--btn-background-color, var(--t-cta-bg));
			background-image: linear-gradient(135deg, var(--btn-background-color, var(--t-cta-bg)) 49.9%, var(--btn-border-color, var(--t-cta-border-color, currentColor)) 50%);
			background-repeat: no-repeat;
			background-size: var(--cut-size) var(--cut-size);
			background-position: 100% 100%;
		}

		&[data-backlink] {
			&::before {
				transform: scaleX(-1); // Make the cut sit at the bottom-left instead
			}
		}
	}

	.about-quotebox {
		--quotebox-font: var(--t-font-heading);
		--quotebox-weight: 400;
		--quotebox-style: normal;
		--quotebox-transform: uppercase;
		--quotebox-tracking: var(--t-heading-tracking);
		--quotebox-corner-radius: 0;

		position: relative;

		&::before {
			content: '';

			position: absolute;
			inset: 0.5em -0.5em -0.5em 0.5em;
			z-index: -1;

			border: 2px solid var(--t-color-aux-med);
		}
	}

	.cardblock {
		// Lea Verou â€” Cicada principle: simple and clever!
		&:nth-child(7n + 1) {
			--w: 50%;
		}
		&:nth-child(7n + 2) {
			--w: 80%;
		}
		&:nth-child(7n + 3) {
			--w: 60%;
		}
		&:nth-child(7n + 4) {
			--w: 70%;
		}
		&:nth-child(7n + 5) {
			--w: 40%;
		}
		&:nth-child(7n + 6) {
			--w: 20%;
		}

		box-shadow: 0 0 1em -0.375em var(--t-accent-color);

		&::before {
			content: '';

			position: absolute;
			z-index: 3; // Overlaps the content layer of z-index=2
			inset-block-end: 0;
			inset-inline-start: calc(var(--cardblock-border-thickness) * -1);

			width: var(--w, 30%);
			height: 0.25rem;
			clip-path: polygon(0 0, calc(100% - 0.25rem) 0, 100% 100%, 0 100%);

			background: var(--cardblock-border-color);
		}

		&-title > a {
			line-height: 1.3;
			padding-block-start: 0.25em;
		}
	}

	.callout {
		border-inline-start-color: var(--t-color-main-min);
	}

	.callout-label,
	.postlist-yeargroup {
		margin-block-end: 0.5em;
		margin-inline-start: calc(var(--size-m) * -1);
		padding-block: 0.125em;
		padding-inline: var(--size-m);

		font-size: 1.25em;
		text-shadow: none;
		color: var(--t-color-main-max);
		background: linear-gradient(90deg, #00000000, #00000032) var(--t-color-main-min);
	}

	.callout-label {
		width: fit-content;
		padding-block-end: 0; // Heading font doesn't sit right in the middle
		padding-inline: var(--size-m) var(--size-l);

		&::before {
			content: '// ';
		}
	}

	.codeblock {
		--token-gray-med: #a85454;
		--token-main-med: #ff7e66;
	}

	.callout-label,
	.postlist-yeargroup,
	.codeblock::before {
		clip-path: polygon(0 0, 100% 0, 100% calc(100% - var(--cut-size)), calc(100% - var(--cut-size)) 100%, 0 100%); // Cut the bottom-right corner
	}

	.footer-logo {
		background: linear-gradient(var(--t-footer-border-color) 50%, var(--t-color-main-med) 0) fixed 50% 50% / 100% 5px;
	}
}

@include theme('campfire') {
	.about-quotebox {
		--quotebox-bg-start: var(--t-color-aux-min);
		--quotebox-bg-end: var(--t-color-aux-med);
	}

	.bigboi {
		outline: 1px solid var(--t-color-aux-min);

		&::before {
			content: '';

			position: absolute;
			inset: 0;

			background: inherit;

			// This is pretty much just Scott Kellum's SVG filter with frequency and colour changed, credit: https://codepen.io/scottkellum/details/poOWGQg
			filter: url("data:image/svg+xml,%3Csvg width='0' height='0' viewBox='0 0 0 0' xmlns='http://www.w3.org/2000/svg'%3E%3Cdefs%3E%3Cfilter id='topo'%3E%3CfeFlood result='flood' flood-color='rgb(89,83,3)'%3E%3C/feFlood%3E%3CfeTurbulence seed='#{random(999)}' type='fractalNoise' numOctaves='2' baseFrequency='0.00625'%3E%3C/feTurbulence%3E%3CfeColorMatrix type='saturate' values='0' result='noise'%3E%3C/feColorMatrix%3E%3CfeComponentTransfer in='noise' result='h1'%3E%3CfeFuncA type='table' tableValues='-220 100'%3E%3C/feFuncA%3E%3C/feComponentTransfer%3E%3CfeMorphology operator='dilate' radius='1'%3E%3C/feMorphology%3E%3CfeComposite in2='h1' result='a1' operator='out'%3E%3C/feComposite%3E%3CfeComponentTransfer in='noise' result='h2'%3E%3CfeFuncA type='table' tableValues='-160 100'%3E%3C/feFuncA%3E%3C/feComponentTransfer%3E%3CfeMorphology operator='dilate' radius='1'%3E%3C/feMorphology%3E%3CfeComposite in2='h2' result='a2' operator='out'%3E%3C/feComposite%3E%3CfeComponentTransfer in='noise' result='h3'%3E%3CfeFuncA type='table' tableValues='-120 100'%3E%3C/feFuncA%3E%3C/feComponentTransfer%3E%3CfeMorphology operator='dilate' radius='1'%3E%3C/feMorphology%3E%3CfeComposite in2='h3' result='a3' operator='out'%3E%3C/feComposite%3E%3CfeComponentTransfer in='noise' result='h4'%3E%3CfeFuncA type='table' tableValues='-80 100'%3E%3C/feFuncA%3E%3C/feComponentTransfer%3E%3CfeMorphology operator='dilate' radius='1'%3E%3C/feMorphology%3E%3CfeComposite in2='h4' result='a4' operator='out'%3E%3C/feComposite%3E%3CfeComponentTransfer in='noise' result='h5'%3E%3CfeFuncA type='table' tableValues='-50 100'%3E%3C/feFuncA%3E%3C/feComponentTransfer%3E%3CfeMorphology operator='dilate' radius='1'%3E%3C/feMorphology%3E%3CfeComposite in2='h5' result='a5' operator='out'%3E%3C/feComposite%3E%3CfeComposite in='a1' in2='a2' result='c1' operator='over'%3E%3C/feComposite%3E%3CfeComposite in='c1' in2='a3' result='c2' operator='over'%3E%3C/feComposite%3E%3CfeComposite in='c2' in2='a4' result='c3' operator='over'%3E%3C/feComposite%3E%3CfeComposite in='c3' in2='a5' result='c4' operator='over'%3E%3C/feComposite%3E%3CfeComponentTransfer in='c4' result='c5'%3E%3CfeFuncR type='discrete' tableValues='1 0 1 1'%3E%3C/feFuncR%3E%3CfeFuncG type='discrete' tableValues='1 0 1 1'%3E%3C/feFuncG%3E%3CfeFuncB type='discrete' tableValues='1 0 1 1'%3E%3C/feFuncB%3E%3CfeFuncA type='discrete' tableValues='1 0 1 1'%3E%3C/feFuncA%3E%3C/feComponentTransfer%3E%3CfeComposite in='SourceAlpha' in2='c5' operator='out' result='alpha'%3E%3C/feComposite%3E%3CfeComposite operator='in' in='flood'%3E%3C/feComposite%3E%3C/filter%3E%3C/defs%3E%3C/svg%3E#topo");
		}
	}

	.footer-logo > svg {
		fill: var(--t-color-main-max);
		filter: url(#sarasquiggly); // Only availaible on the homepage, but that's okay
	}
}
