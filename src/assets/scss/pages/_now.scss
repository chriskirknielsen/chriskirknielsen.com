.now-grid {
	--flow-space: var(--size-xs);
	--now-item-min: min(100%, 16rem);

	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(var(--now-item-min), 1fr));
	gap: var(--size-xl) var(--size-l);
}

.now-item {
	// This would be a perfect candidate for subgrid but alas, browser supportâ€¦
	isolation: isolate;
	display: grid;
	grid-template-rows:
		calc(var(--type-4) / 4 * 3) /* Most of an h2 size */
		auto
		var(--now-item-image-fill, 0px) /* At least a little of the image should be revealed*/
		auto
		1rem; //
	grid-template-columns: 1fr;

	& > * {
		grid-column: 1;
	}
}

.now-section-heading {
	grid-row: 1 / span 2;
}

.now-item:has(.now-item-image) {
	--now-item-image-fill: minmax(min(33vh, 10rem), 1fr);
}

.now-item:has(.now-item-image) :is(.now-section-heading, .now-item-content) {
	text-shadow: 0 1px 0 var(--ctx-bg), 0 0 4px var(--ctx-bg);
}

.now-section-heading,
.now-item-content {
	padding-inline: var(--size-m);
}

.now-item-content {
	padding-block: var(--size-m) 0;
	grid-row: 4 / -1;
}

.now-item-image {
	/* 1: A little trick to ensure the grid item doesn't quite participate in the row sizing, but still takes up the available space (basically zero height relative to itself, 100% height relative to the container. */
	--now-item-mask: linear-gradient(0deg, hsl(0 0% 0% / 0), 67%, hsl(0 0% 0% / 0.5)); // Keep it relatively faint

	z-index: -1;
	grid-row: 2 / -2;

	height: 0; /*1*/
	width: 100%;
	min-height: 100%; /*1*/

	object-fit: cover;
	object-position: 50% 33%; // Keep the focus higher into the image-fill space
	border-radius: var(--t-corner-radius);

	filter: saturate(0.5);
	-webkit-mask: var(--now-item-mask);
	mask: var(--now-item-mask);
}
