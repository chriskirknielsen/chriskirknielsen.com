.content-fullbleed {
	position: relative;
	width: 100vw;
	margin-inline-start: calc(50% - 50vw);
}

.container,
.container > .content {
	width: 100%;
	max-width: var(--site-content-width);
	margin-inline: auto;
	padding-inline: var(--site-content-gutter);
}

.container > .container {
	padding-inline: 0;
}

@supports (grid-template-columns: subgrid) {
	.container {
		display: grid;
		grid-template-columns:
			[fullbleed-start]
			1fr
			[wide-start]
			var(--container-inner-gutter, var(--site-content-gutter))
			[container-start]
			var(--container-inner-def, minmax(0, var(--site-content-width)))
			[container-end]
			var(--container-inner-gutter, var(--site-content-gutter))
			[wide-end]
			1fr
			[fullbleed-end];

		&,
		& > .content {
			max-width: 100%;
			margin-inline: 0;
			padding-inline: 0;
		}
	}

	.container > * {
		grid-column: container-start / container-end;
	}

	.content-wide {
		grid-column: wide-start / wide-end;
	}

	.content-fullbleed {
		position: relative;

		grid-column: fullbleed-start / fullbleed-end;

		&.container {
			display: grid;
			grid-template-columns: subgrid;
			grid-template-rows: 1fr;
			width: initial;
			margin-inline: 0;

			& > .container {
				grid-column: container-start / container-end;
				display: block;
				width: 100%;
				margin-inline: 0;
				padding-inline: 0;
			}
		}
	}
}
